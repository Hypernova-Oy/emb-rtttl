#!/usr/bin/perl

# Copyright 2020 Hypernova Oy
# Copyright 2016 Vaara-kirjastot
#

use Modern::Perl;
use Carp;
use Getopt::Long qw(:config no_ignore_case);

use RTTTL::Daemon;
use RTTTL::Player;

my $help;
my $verbose = 0;
my $operation = '';
my $pin;
my $dir;
my $rtttl;
my $daemon;
my $rundir;
my $user;
my $group;

GetOptions(
    'h|help'                      => \$help,
    'v|verbose:i'                 => \$verbose,
    'p|pin:i'                     => \$pin,
    'd|dir:s'                     => \$dir,
    'o|operation:s'               => \$operation,
    'r|rtttl:s'                   => \$rtttl,
    'daemon'                      => \$daemon,
    'rundir:s'                    => \$rundir,
    'user:s'                      => \$user,
    'group:s'                     => \$group,
);

my $usage = <<USAGE;


A happy RTTTL-player to play RTTTL-songs from the given directory
You can configure some of these options in /etc/emb-rtttl/config


  -v --verbose            Defaults to 0, minimal output.
                          1, some output

  -h --help               HELP!

  -o --operation
                  list    list all songs in the directory
                  song    play the target
                  random  play a random song
                  rtttl   Same as -r --rtttl

  -d --dir                Which directory to use as the song base?

  -p --pin                Which GPIO pin to use for playback?

  -r --rtttl              rtttl-song/codes to play, eg.
                          ToveriAccessDenied:d=4,o=4,b=100:32e,32d,32e,4c

  --daemon                Starts a daemon process listening at /var/run/emb-rtttl/sock
  --rundir PATH           Where the daemon socket and pid are placed, defaults to /var/run/emb-rtttl/[pid|sock]

  --user NAME             Defaults to pi
  --group NAME            Defaults to gpio

EXAMPLES:

  perl scripts/rtttl-player.pl -p 1 -d rtttl -o list
  perl scripts/rtttl-player.pl -p 1 -d rtttl -o song-nyancat
  rtttl-player.pl -p 1 -o random
  rtttl-player --daemon

USAGE

if ($help) {
  print $usage;
  exit 0;
}
unless (defined($daemon) || $rtttl || $operation =~ /(^list$)|(^song-\w+)|(^random$)|(^rtttl$)/) {
  print $usage."\n".
        "You must define the --operation or --rtttl. Your --operation is '$operation'\n";
  exit 1;
}


my $player = RTTTL::Player->new({pin => $pin, dir => $dir, cverbose => $verbose, user => $user, group => $group});

if ($rtttl) {
  $player->_playSong($rtttl);
}
elsif ($operation) {
  $player->dispatchOperation($operation);
}
elsif (defined($daemon)) {
  RTTTL::Daemon::start_daemon($player);
}
else {
  die "I dont know what to do";
}
